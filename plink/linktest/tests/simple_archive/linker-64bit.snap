---
source: plink/linktest/harness/main.rs
---
linking exited with exit status: 0

no stdout present

=== stderr ===
debug print: loaded object
 │  
 │  Object {
 │      env: ElfEnvironment {
 │          class: Elf64,
 │          endian: Little,
 │          abi: SystemV,
 │          machine: X86_64,
 │      },
 │      sections: {
 │          ".data": Section {
 │              perms: ElfPermissions(RW),
 │              content: Data(
 │                  DataSection {
 │                      deduplication: Disabled,
 │                      parts: {
 │                          section#7: Real(
 │                              DataSectionPartReal {
 │                                  source: hello.o inside archive archived.a,
 │                                  bytes: RawBytes {
 │                                           ?0 ?1 ?2 ?3 ?4 ?5 ?6 ?7 ?8 ?9 ?a ?b ?c   (len: 0xd)
 │                                         +----------------------------------------+
 │                                      0? | 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a | Hello world!.
 │                                  },
 │                                  relocations: [],
 │                                  layout: (),
 │                              },
 │                          ),
 │                      },
 │                  },
 │              ),
 │          },
 │          ".text": Section {
 │              perms: ElfPermissions(RX),
 │              content: Data(
 │                  DataSection {
 │                      deduplication: Disabled,
 │                      parts: {
 │                          section#1: Real(
 │                              DataSectionPartReal {
 │                                  source: entry.o,
 │                                  bytes: RawBytes {
 │                                           ?0 ?1 ?2 ?3 ?4 ?5 ?6 ?7 ?8 ?9 ?a ?b ?c ?d ?e ?f   (len: 0x1f)
 │                                         +-------------------------------------------------+
 │                                      0? | b8 04 00 00 00 bb 01 00 00 00 b9 00 00 00 00 ba | ................
 │                                      1? | 00 00 00 00 cd 80 b0 01 bb 00 00 00 00 cd 80    | ...............
 │                                  },
 │                                  relocations: [
 │                                      ElfRelocation {
 │                                          offset: 0xb,
 │                                          symbol: symbol#3,
 │                                          relocation_type: X86_64_32,
 │                                          addend: Some(
 │                                              0x0,
 │                                          ),
 │                                      },
 │                                      ElfRelocation {
 │                                          offset: 0x10,
 │                                          symbol: symbol#4,
 │                                          relocation_type: X86_64_32,
 │                                          addend: Some(
 │                                              0x0,
 │                                          ),
 │                                      },
 │                                  ],
 │                                  layout: (),
 │                              },
 │                          ),
 │                      },
 │                  },
 │              ),
 │          },
 │      },
 │      section_ids_to_names: {
 │          section#1: ".text",
 │          section#7: ".data",
 │      },
 │      strings: Strings {
 │          tables: {
 │              section#2: ElfStringTable {
 │                  strings: {
 │                      0x0: "",
 │                      0x1: ".text",
 │                      0x7: ".shstrtab",
 │                      0x11: ".symtab",
 │                      0x19: ".strtab",
 │                      0x21: ".rela.text",
 │                  },
 │              },
 │              section#4: ElfStringTable {
 │                  strings: {
 │                      0x0: "",
 │                      0x1: "entry.S",
 │                      0x9: "hello",
 │                      0xf: "hello_len",
 │                      0x19: "_start",
 │                  },
 │              },
 │              section#8: ElfStringTable {
 │                  strings: {
 │                      0x0: "",
 │                      0x1: ".data",
 │                      0x7: ".shstrtab",
 │                      0x11: ".symtab",
 │                      0x19: ".strtab",
 │                  },
 │              },
 │              section#10: ElfStringTable {
 │                  strings: {
 │                      0x0: "",
 │                      0x1: "hello.S",
 │                      0x9: "hello",
 │                      0xf: "hello_len",
 │                  },
 │              },
 │          },
 │      },
 │      symbols: Symbols {
 │          local_symbols: {
 │              symbol#0: ElfSymbol {
 │                  name: section#4:string#0,
 │                  binding: Local,
 │                  type_: NoType,
 │                  definition: Undefined,
 │                  value: 0x0,
 │                  size: 0x0,
 │              },
 │              symbol#1: ElfSymbol {
 │                  name: section#4:string#1,
 │                  binding: Local,
 │                  type_: File,
 │                  definition: Absolute,
 │                  value: 0x0,
 │                  size: 0x0,
 │              },
 │              symbol#2: ElfSymbol {
 │                  name: section#4:string#0,
 │                  binding: Local,
 │                  type_: Section,
 │                  definition: Section(
 │                      section#1,
 │                  ),
 │                  value: 0x0,
 │                  size: 0x0,
 │              },
 │              symbol#6: ElfSymbol {
 │                  name: section#10:string#0,
 │                  binding: Local,
 │                  type_: NoType,
 │                  definition: Undefined,
 │                  value: 0x0,
 │                  size: 0x0,
 │              },
 │              symbol#7: ElfSymbol {
 │                  name: section#10:string#1,
 │                  binding: Local,
 │                  type_: File,
 │                  definition: Absolute,
 │                  value: 0x0,
 │                  size: 0x0,
 │              },
 │              symbol#8: ElfSymbol {
 │                  name: section#10:string#0,
 │                  binding: Local,
 │                  type_: Section,
 │                  definition: Section(
 │                      section#7,
 │                  ),
 │                  value: 0x0,
 │                  size: 0x0,
 │              },
 │          },
 │          global_symbols_map: {
 │              symbol#3: "hello",
 │              symbol#4: "hello_len",
 │              symbol#5: "_start",
 │              symbol#9: "hello",
 │              symbol#10: "hello_len",
 │          },
 │          global_symbols: {
 │              "_start": Strong(
 │                  ElfSymbol {
 │                      name: section#4:string#25,
 │                      binding: Global,
 │                      type_: NoType,
 │                      definition: Section(
 │                          section#1,
 │                      ),
 │                      value: 0x0,
 │                      size: 0x0,
 │                  },
 │              ),
 │              "hello": Strong(
 │                  ElfSymbol {
 │                      name: section#10:string#9,
 │                      binding: Global,
 │                      type_: NoType,
 │                      definition: Section(
 │                          section#7,
 │                      ),
 │                      value: 0x0,
 │                      size: 0x0,
 │                  },
 │              ),
 │              "hello_len": Strong(
 │                  ElfSymbol {
 │                      name: section#10:string#15,
 │                      binding: Global,
 │                      type_: NoType,
 │                      definition: Absolute,
 │                      value: 0xd,
 │                      size: 0x0,
 │                  },
 │              ),
 │          },
 │      },
 │  }
 ┴



